version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: tramboory_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db_init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./app
      dockerfile: Dockerfile.backend
    container_name: tramboory_backend
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3001:3001"
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: tramboory
      SCHEMA: main
      PORT: 3001
      JWT_SECRET: 229468b3696d9dd6e5d998aaad1b6e779715fa3359ceb324e3b05193b9918cd3
      NODE_ENV: production
      VITE_CLOUDINARY_CLOUD_NAME: dswklswqw
      VITE_CLOUDINARY_API_SECRET: y4OC6UV8RCnXhGhZI8ITp_VopAs
      VITE_CLOUDINARY_API_KEY: 456762825847946
      VITE_CLOUDINARY_UPLOAD_PRESET: ml_default
    volumes:
      - ./app/uploads:/usr/src/app/uploads

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile.frontend
    container_name: tramboory_frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"
    environment:
      NODE_ENV: production
      VITE_API_URL: http://localhost:3001/api
      VITE_CLOUDINARY_CLOUD_NAME: dswklswqw
      VITE_CLOUDINARY_API_SECRET: y4OC6UV8RCnXhGhZI8ITp_VopAs
      VITE_CLOUDINARY_API_KEY: 456762825847946
      VITE_CLOUDINARY_UPLOAD_PRESET: ml_default

volumes:
  postgres_data:
    name: tramboory_postgres_data

networks:
  default:
    name: tramboory_network